[tox]
minversion = 3.4.0
envlist = py{36,37,38,39,310,311},lint,check-formatting,manifest,coverage-report
isolated_build = True

[testenv]
; TODO: fix CI workflows when installing `png` extras
extras = tests
commands = coverage run -m pytest {posargs}

[testenv:lint]
basepython = python3.10
deps =
    pre-commit
commands = pre-commit run --all-files

; This env just runs `black` and fails tox if it's not formatted correctly.
; If this env fails on CI, run `tox -e format` locally in order to apply changes.
[testenv:check-formatting]
basepython = python3.10
deps = black==22.6.0
skip_install = true
commands =
    black src tests --diff --check  --config {toxinidir}/pyproject.toml

[testenv:docs]
basepython = python3.10
extras = docs
commands =
    interrogate --config {toxinidir}/pyproject.toml
    sphinx-build -n -T -b html -d {envtmpdir}/doctrees docs docs/_build/html

[testenv:manifest]
basepython = python3.10
deps = check-manifest
skip_install = true
commands = check-manifest

[testenv:format]
basepython = python3.10
deps = black==22.6.0
skip_install = true
commands =
    black src tests --config {toxinidir}/pyproject.toml

[testenv:generate-badge]
basepython = python3.10
commands =
    interrogate --config {toxinidir}/pyproject.toml --generate-badge {toxinidir}/docs/_static


[testenv:coverage-report]
basepython = python3.10
depends = py310
skip_install = true
deps = coverage[toml]>=5.4
commands =
    coverage combine
    coverage report

; tool-specific config below
[flake8]
show-source = true
max-line-length = 80
exclude = .venv,.tox,.git,dist,doc,*.egg,build,tests/functional/sample
# comply with black
ignore = E203, E231, W503

[pytest]
addopts = -v
testpaths = tests


[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310, docs, lint, manifest, check-formatting
    3.11: py311
